{"version":3,"sources":["App.js","index.js"],"names":["App","useState","message","setMessage","color","setColor","className","onSubmit","event","preventDefault","init","Number","target","value","current","quatity","isNaN","loss","toFixed","lossPercentage","profit","profitPercentage","autoComplete","id","min","type","placeholder","required","style","rootElement","document","getElementById","createRoot","render"],"mappings":"mMAEe,SAASA,IACtB,IAAI,EAAwBC,mBAAS,IAAG,mBAAnCC,EAAO,KAAEC,EAAU,KACpB,EAAoBF,mBAAS,SAAQ,mBAApCG,EAAK,KAAEC,EAAQ,KAkCpB,OACE,sBAAKC,UAAU,MAAK,UAClB,uBAAMA,UAAU,kBAAkBC,SAnCtC,SAAyBC,GACvBA,EAAMC,iBACN,IAAIC,EAAOC,OAAOH,EAAMI,OAAOF,KAAKG,OAChCC,EAAUH,OAAOH,EAAMI,OAAOE,QAAQD,OACtCE,EAAUJ,OAAOH,EAAMI,OAAOG,QAAQF,OAC1C,GAAIG,MAAMN,IAASM,MAAMF,GACvBT,EAAS,SACTF,EAAW,uBACN,GAAgB,IAAZY,EACTV,EAAS,SACTF,EAAW,8BACN,GAAIO,EAAOI,EAAS,CACzB,IAAIG,IAASP,EAAOI,GAAWC,GAASG,QAAQ,GAC5CC,GAAmBF,GAAQP,EAAOK,GAAY,KAAKG,QAAQ,GAC/Db,EAAS,OACTF,EAAW,uBAAD,OACec,EAAI,mCAA2BE,EAAc,KAExE,MAAO,GAAIL,EAAUJ,EAAM,CACzB,IAAIU,IAAWN,EAAUJ,GAAQK,GAASG,QAAQ,GAE9CG,GAAqBD,GAAUV,EAAOK,GAAY,KAAKG,QAAQ,GAEnEb,EAAS,SAETF,EAAW,yBAAD,OACiBiB,EAAM,qCAA6BC,EAAgB,KAEhF,MACEhB,EAAS,QACTF,EAAW,mBAEf,EAGgE,UAC1D,qDACA,sBAAKG,UAAU,QAAO,UACpB,uBACEgB,aAAa,MACbC,GAAG,OACHC,IAAI,IACJC,KAAK,SACLC,YAAY,0BACZC,UAAQ,IAEV,uBACEL,aAAa,MACbC,GAAG,UACHE,KAAK,SACLD,IAAI,IACJE,YAAY,8BACZC,UAAQ,IAEV,uBACEL,aAAa,MACbC,GAAG,UACHC,IAAI,IACJC,KAAK,SACLC,YAAY,2BACZC,UAAQ,OAGZ,qBAAKrB,UAAU,gBAAe,SAC5B,wBAAQmB,KAAK,SAAQ,yBAIzB,qBAAKnB,UAAU,mBAAkB,SAC/B,qBAAKsB,MAAO,CAAExB,MAAOA,GAASE,UAAU,SAAQ,SAC7CJ,QAKX,CC3EA,IAAM2B,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAACjC,EAAG,M","file":"static/js/main.3320f284.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./styles.css\";\nexport default function App() {\n  var [message, setMessage] = useState(\"\");\n  var [color, setColor] = useState(\"black\");\n  function onSubmitHandler(event) {\n    event.preventDefault();\n    var init = Number(event.target.init.value);\n    var current = Number(event.target.current.value);\n    var quatity = Number(event.target.quatity.value);\n    if (isNaN(init) || isNaN(current)) {\n      setColor(\"black\");\n      setMessage(`invalid inputs`);\n    } else if (quatity === 0) {\n      setColor(\"black\");\n      setMessage(`do not have any stock`);\n    } else if (init > current) {\n      var loss = ((init - current) * quatity).toFixed(2);\n      var lossPercentage = ((loss / (init * quatity)) * 100).toFixed(2);\n      setColor(\"red\");\n      setMessage(\n        `oops!! Your loss is ${loss} and loss Percentage is ${lossPercentage}%`\n      );\n    } else if (current > init) {\n      var profit = ((current - init) * quatity).toFixed(2);\n\n      var profitPercentage = ((profit / (init * quatity)) * 100).toFixed(2);\n\n      setColor(\"green\");\n\n      setMessage(\n        `Yeah!! Your profit is ${profit} and profit Percentage is ${profitPercentage}%`\n      );\n    } else {\n      setColor(\"blue\");\n      setMessage(`No Gain, No Pain`);\n    }\n  }\n  return (\n    <div className=\"App\">\n      <form className=\"input-container\" onSubmit={onSubmitHandler}>\n        <h3>Where is my Stocks?</h3>\n        <div className=\"input\">\n          <input\n            autoComplete=\"off\"\n            id=\"init\"\n            min=\"0\"\n            type=\"number\"\n            placeholder=\"Enter inital price here\"\n            required\n          />\n          <input\n            autoComplete=\"off\"\n            id=\"quatity\"\n            type=\"number\"\n            min=\"0\"\n            placeholder=\"Enter Number of Stocks here\"\n            required\n          />\n          <input\n            autoComplete=\"off\"\n            id=\"current\"\n            min=\"0\"\n            type=\"number\"\n            placeholder=\"Enter Current Price Here\"\n            required\n          />\n        </div>\n        <div className=\"btn-container\">\n          <button type=\"submit\">âžœ</button>\n        </div>\n      </form>\n\n      <div className=\"output-container\">\n        <div style={{ color: color }} className=\"output\">\n          {message}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}